//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace tsgen.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("tsgen.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to interface Type {
        ///    Type: Function;
        ///    Name: string;
        ///    FullName: string;
        ///    Parent: Function;
        ///}
        ///
        ///interface ByRef&lt;T&gt; {
        ///    ref: T;
        ///}
        ///
        ///declare module collections {
        ///    export class Dictionary&lt;TKey, TValue&gt; { }
        ///    export class HashSet&lt;T&gt; { }
        ///    export class List&lt;T&gt; { }
        ///    export class Queue&lt;T&gt; { }
        ///}
        ///
        ///declare module Services {
        ///	
        ///}.
        /// </summary>
        internal static string BasicTypes {
            get {
                return ResourceManager.GetString("BasicTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///           
        ///           	Generated on: {0}
        ///           	Assembly: {1}
        ///           
        ///           	This code has been generated by a tool.
        ///           	Do not attempt to manually edit this file.
        ///           	All changes will be lost when this file is rebuilt.
        ///           
        ///           	tsgen tool by Asti
        ///           
        ///*/
        ///
        ///.
        /// </summary>
        internal static string Header {
            get {
                return ResourceManager.GetString("Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///tsgen tool - June 2015
        ///---------------------------
        ///
        ///	Help (Use tsgen /? to view this)
        ///
        ///	Usage : tsgen &lt;assembly&gt; [&lt;output file&gt;] [flags]
        ///
        ///	E.g., tsgen WebService.dll webservice.js -comments
        ///
        ///	If an output file is not specified, the output file 
        ///	will be the same name as the assembly. 
        ///
        ///	All files can take relative or absolute paths.
        ///
        ///Flags
        ///-----
        ///
        ///	-comments	: Write XML comments from the classes onto the generated JS for Visual Studio intellisense support
        ///	-nolib		: Do not include service [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ///&lt;reference path=&quot;Namespace.js&quot; /&gt;
        ////// &lt;reference path=&quot;rx.min.js&quot;/&gt;
        ////* Service.js 
        ///   
        ///Contains base types of all proxy / entity classes as well
        ///as dependency/inheritance tracking.  
        ///*/
        ///
        ///(function (Base) {
        ///
        ///    if (typeof (Base) == &quot;undefined&quot;) return;
        ///    if (Base.Application) return;
        ///
        ///    if (typeof (Base.Namespace) == &quot;undefined&quot;)
        ///        throw &quot;Namespace.js is not included!&quot;;
        ///
        ///    Namespace.Dependencies = new Array();
        ///    Namespace.Resolve = function (func) {
        ///        if (func == nul [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Service {
            get {
                return ResourceManager.GetString("Service", resourceCulture);
            }
        }
    }
}
